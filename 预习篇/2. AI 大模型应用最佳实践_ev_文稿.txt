	好，那我们这节课就来实战一下这个大模型的应用最佳实践。就如何使用刚刚的这些技巧来做我们的GPT4的实操。首先推荐这么一个OpenAI官方推出来的应用程序叫playground，它的访问地址就在屏幕的右下角，我们的open a playground。这个playground里面其实是提供了一个类似于我们在使用chat completions API的时候，给大家展示的这么一些API的功能，比如说有多种角色，大家能看到这里有user，有assistant，有system，有不同的参数，包括它是使用chat还是completion，使用什么模型，它的temperature是多少，就决定了它生成结果的多样性。那它的token的数量，它的上这个上下文的数量有一个上限值max nse，包括它的停止词，然后它的top frequency的这个就是相关的这些参数都会在这体现出来。那么我们现在就来实操一下。
	在playground里面我预制了这么一些事例，这些事例不能分享给大家，有一个重要的原因是因为这个界面它没有做太多的访问权限控制。所以当我分享给大家之后，其他会给大家编辑权限，那它就会被改的，这个很不一样了。但是没有关系，我在PPT里面留下了这些截图，大家可以在PPT里看到使用的这些prompt，来做实际的试验。
	好，我们现在看一看这个界面里面，就是刚刚说到的这个界面里面，我们构造的这些带playground里面这些交互，都可以一键通过无忧code变成对应的代码。这个代码大家就可以直接拿去用，OKI的API就是它维护的上下文。所以整个playground的这个应用程序的核心是希望大家能够理解OpenAI内部的调用。就是我们到底ChatGPT是怎么玩的，为什么会有一个对话的这样的一个体验。Playground其实就给了你一个类似对话的体验，他帮你主动维护了这个messages，那么你不断的去问，会给你对应的这个message。然后也可以让你熟悉它的OPI的API到底是怎么用的，这个python的版本，同时也有别的版本，比如说node JS你是一个前端的的开发，你用的是这个node JS。那这里也会有啊，只需要去替换这个部分就好了。然后我们来实际看一看，当然你要跟其他的同学去分享，这里是可以去做分享的那我们这就不分享了，你要去保存它的话，这边可以保存。那我们实际来看看，在这个示例开始之前，我们把system先给干掉，然后让它只使用这个user来做提问，我们把这些都可以先。去掉。
	好，我们保存一下。为了看是否保存成功，我们可以看一下view code，这个就保存下来。结果现在。
	我们什么。
	都没什么system的指令都没有给，就这么提一个问题，看看GT4这个模型会怎么恢复。大家能发现它跟刚刚我们删掉的内容很不一样。他很一本正经的告诉你，他就像一个你在网上搜索的标准答案一样，很认真的给你做分析。比如工作内容单一，工作环境不促进你学习，没有找的兴趣点。但是首先它不能说它是错的，因为这个没有给任何前置的假设。你只是在提问，那你问一些你的身边的同事，可能有的人就是会这样的方式来回答你那有的就是所谓的他会用一些哲学的角度，或者说佛家的思想来回答你那这就是一个差异。我们可以试着看一下这个差异的对比，保存下来。好，然后我们重新来做一次提问。
	他会大家会看到它其实会有一个你可以认为是植入了一个概念，就是让GPT4理解他自己现在是有这样的一个身份的。这个身份就是他是一个哲学家，他是一个佛学家。那他在回答你的问题的时候，他都会以他的身份的这个视角来回答你的问题。这是一个非常常用的技巧，也是我们在使用ChatGPT的过程当中，能够去很好的去做各种各样不同的问题。你只要用这样的一种方式去注入它，都会按照你的这个大方向去回答问题。接着我们再看一看，说的很长，就比如说在佛学中，在这个意义上同时从儒家思想就说了很多。这个其实跟我们通常脑海中印象里面的这些佛学大家不太一样，就说太多了对吧？我们再给他一个强制性的要求。
	我们告诉他不要啰嗦，要有大师的范儿，这个也是一个很有意思的一个指令，并且是中文的。
	你看这个说话方式就更精炼，认知世间得于工作，修身养性。学无止境，仁者无忧。身在其中领悟万物，心有不甘即为上进之火。事在人为，继续修炼，我们可以尝试再继续问他。
	这个就很有意思，就在我们自己去做应用开发的时候，要善于去使用这个system的指令。这个system的指令也很好去设计，就是我们在肉这部分使用system就好了，它会放在整个message里面的头部，那欢迎大家去实际的去使用这个playground去感受一下，体验一下到底怎么样去用我们的对话chat这种API，使用我们的GPT4模型。第二个就是我们要讲的怎么样去分步骤的去执行一些问题。就比如说我们的debug，在大家使用embedding这节课的时候，包括使用一些其他问题的时候，有的同学会遇到一些各种OpenAI的报错。OpenAI的这个库又是最近才火起来的一个库，跟着大语言模型的大家不知道怎么办，然后这个问题就放在这儿了。可能有的同学会用搜索引擎，这个是艾特助教的一些信息，我们可以保留在这儿，也没有太大的问题，他能自己去做区分，这个是它的一个报错日志，遇到这种问题，通常我们会去搜索引擎或者stack overflow上面去找答案。
	那还有一种方式，就是让GPT来告诉你答案。那怎么做呢？比如说我们这里看到我们同样使用system，然后告诉他什么样的指令。就我们刚刚有提到要给他这个角色身份，那这个身份如果他本身已经包含了很多的概念，你直接告诉他他是能理解的。比如说佛学，比如说中国古典哲学。但还有时候比如说你不能说你是一个第八个专家，那更多的时候你要描述这个身份要干什么任务，就指令的注入，就比如说这里你将收到第bug的问题，将每个问题分类为报错日志分析，并因可能性推断解决方案。
	参考资料分列分点来陈列的输出格式如下。这个是我们要求的内，我们把这些删掉，保存一下，我们可以看看一眼代码，这就是它的输入，它即将发起的请求。我们提交报错日志分析这个错误表明在尝试连接OpenAI的API的时候发生了问题，错误发生在利用VPI重新VPN重新路由你的网络流量时，然后错误也找出了具体的异常，有这一行代码具体的异常，有一个文件结束符是未预期的文件结束符，就文件可能没下载完之类的对应的可能性。
	推断你使用的HTTP代理的服务器不稳定，解决的方案，更换HTP代理服务器，检查VPN，更新或修复你的python环境当中的SSL或者TOS的协议库。还有一些参考资料可以方便去进一步的研究。这个其实就是一个能够让我们的以前很多同学遇到这种代码报错，都说GPT能帮你去解决问题。
	怎么解决？就是你不要只给他一个日志，只给他一个日志，他也能给你一些分析。就像我们刚刚不给system的时候，他能给你一些分析，但出来的结果样式不一定是你想要的。那你可以去调整这部分，让他根据你的需求来做输出，包括日志跟可能性，解决方案、参考资料等等。这个是一个非常有用的一个策略。
	除了这样的方式以外，我们还有讲到分步骤执行。有一个很有趣的现象，我们来看看在做评估模型的时候，把它当成代码的编程语言，然后也是分步骤执行。就是我们刚刚已经实验了怎么让它分步执行了。我还说要把我们的自然语言，把我们的提示词变成一个编程语言，那具体要怎么做呢？我们看看这个示例这个示例system稍微有点长，我给大家做一个拆解。一部分就是你将获得由3引号分割的文本，还有这里三个引号，我们把这个也先擦掉。3引号分割的文本就是这一段三引号分割的文本。然后文本应该为问题的答案，检查以下信息是否直接包含在答案中。尼尔阿姆斯特朗是第一个登上月球的人，然后阿姆斯特朗首次登上月球的时期日期是69年的7月21号。
	那么对于每一个要点执行以下四个步骤，重复该要点，提供与此要点最接近的答案引用。这就是跟我们的evidence这节课学到的很像了。这些是他提供的这个信息，然后这个是问题的答案，去做对应的检索，然后提供与此要点最接近的答案引用，考虑一下不了解这个主题的读者阅读引用能否直接推断出该要点，在做出决定之前解释原因。这个是一个外部的新视角的考虑了。就是说他没有这些鲜艳的信息，然后只是有这一行输入，它能不能推断出答案，然后还要解释一下原因。如果这个问题就这是第三点问题三的答案是是正确的，它能够推断出来就写入yes，否则就写入no，最后还要提供有多少个yes的回答，将此技术作为这样的一个值。是不是很像一个我们写的函数，写代码的时候写的函数一步一步的有这样的步骤。
	这里还有一个破循环，针对每个要点，这有两个要点负循环。这个for循环内部的逻辑还不一样。比如说先重复输入，然后找这个输入相关的引用，然后再用大语言模型来推断这个是不是有能不能推断出这个结论。甚至推断出这个结论之后还给出原因，如果推断出来写yes，推断不出来写no。最后在这个for循环结束之后，还要统计一下有多少yes，那么这个是system的部分，那实际的输入的user的部分是写了阿姆斯特朗是成为第一个登上月球的人类文明历史是历史性的事件发生在7月21号，当时是阿波罗11号任务提交一下，阿姆斯特朗是第一个登上月球的人，称因为成为第一个登上月球的人而闻名。是的，因为答案直接提到了阿姆斯特朗是第一个登上月球的人，尼尔阿姆斯特朗首次登上月球的时期是1969年的7月21日，这这是这是两个他要去for loop的两个for循环。我们能看到这个首次登上月球的时期是7月21日，发生的时间是7月21日，这是从里面检索出来的。是的，因为答案明确提到了登月的日期是7月21日。
	Yes, yes, count to. 好，这个其实是一个很有意思的用来评估模型输出，就假设我们要做的这个事情就是用来评估我们的输入的这个事件，它到底有答对几次。比如说因为这里有两个要点，那么就答对两次，那么这个count two就可以用于我们接下来的任务的处理。整体来看，我们这个GPT3.5的迭代是非常厉害的，他在去判断这个system指令的处理的非常好，把所有的中文指令都做了严格的执行，并且处理的非常正确。
	再来回回味一下这个过程，就是我们看到阿姆斯特朗是第一个登上月球的人，这是他要for loop的第一个。然后阿姆斯特朗首次登上月球的日期是69年的7月21号。是他负循环的第二条要点，然后这两条要点要带入到这个for循环里面，在for循环里面去执行四个步骤。
	第一个步骤重塑这个要点，我们刚才看到了提供与此要点最接近的答案引用，就是从这里里面摘出来去佐证这个要点是正确的。这个原文引用是第一个登上月球的人，因为成为第一个登上月球的人人文明就前一段话，然后首次登上月球的日期，历史性事件发生在69年7月21号，那么这个都摘出来都非常对。然后推断是因为答案直接提到了是第一个登上月球的人，是因为答案明确提到了登月的日期。然后最后答案是4，答案是是啊，那么就输出yes，最后有统计，这个是一个非常值得大家去深入研究的一种给提示词的思路。首先整个这个思路不可能做出面向对象这么深的指令，当然你要做也可以去做尝试面向过程的这种编程方式。现在给GPT3.5和GP4肯定是有效的，它可以面向过程，然后同时去实现破循环，实现这个统计功能，并且分步骤，这个是一个我们怎么样能够把我们的prompt当成编程语言的一个很好的实践。除了这个以外，我还有叫moderation。
	这个moderation是什么概念？
	就是我们提到要合规，我们在上节课讲到，ChatGPT它在使用的时候和我们去调用GPT4的API是不一样的。我们去调用GPT4的API会发现它会生成一些现在GPT不允许生成的内容。其实就是因为GPT4API你去调查的时候，它的性质会比ChatGPT少。ChatGPT它默认会套很多前后处理的逻辑或者说模型，然后把一些不符合这个国家要求规范的内容给它过滤掉，过滤的这个模型就叫moderation。比如说像这里我们看到很多同学试过用TIGPT去写这个帮我编一个什么回相关的故事，他可能不一定给你写，你可以实际试试。
	你看他会写，我不能编写这个相关的故事，但是你在playground里面是可以的，他会给你写一个故事名称，讲述的是有一个叫丽丽的女子有点阴郁，然后巴拉巴拉最后写了一个，然后我们还可以进行进一步的去问，要更多一些血腥和暴力的元素，这些都是moderation这个模型所不允许的。但是在调用GPT4的API，我们已经知道这个就跟调API没有区别的，你要去调API是可以复刻这个结果的那可以写出来，甚至还可以把它扩展成一万字的短篇小说，对吧？
	给一个章节目录，然后给出章节目录之后，因为它会记录这个上下文message，你就只需让他写第一章、第二章到第四章，甚至继续他会知道要写第五章、第九章、第十三章，一直到这儿，你再去提交，我们把这个拉满，81918K的提交不了了，因为它超过限制了。我们request其实是15000，那么实际超过了这个8000的限制。超过这个限制之后，就无法再提交了，这个就是它上下文限制。那怎么办呢？其实他在这边并不需要了解前文的太多内容，你只需要把这一部分给我们的章节标题这一部分拷贝到这里来，然后告诉他这个是一篇小说的章节标题，按照这个章节标题来写小说，那么其实就可以了。上面的这些大部分的上下文都不需要去调用，也不需要浪费这么多的，这个是一个非常常见的一个操作。我们再看一个。是你。
	再分步骤执行。这个也是一个很有代表性的例子，我们刚刚看到用中文去描述了这个模型评估这么一个事例。在这个事例里面，我们的大元模型GPT3.5，它一步一步的去把我们的整个去分拆了多个步骤，这多个步骤都能够去按照它的要求去执行。比如说有两个要点，两个要点下面接了for循环，for循环下面再去接了对应的，最后有一个最终的去统计的功能，这是这样的一个设定。除了这些以外，其次我们还能看到这个分步骤执行，还会有一个很有意思的点，就是英文其实会比中文要好用很多，就是我们强调的一个要给英语的提示词尽量的比如说我们在这儿，我们还是看到这个分步骤执行，这个其实是更简单的一个分步骤执行。
	我们看看按照以下来分步骤处理用户的输入。第一步、第二步、第三步说得很清楚。第一步用一个总结为前缀的句子，对3引号包裹的文本进行总结。3引号包裹的文本在这儿我们去微基百科上去搜索了什么叫大语言模型，他给了这么一个定义。第二步，将第一步当中的总结翻译成英语，然后再在前面加上一个english。第三步，将第一步当中的总结翻译成日语，并在前面加上，这应该也是总结，我是直接看一下。
	我正在学习相关大学。我应该总结。
	翻译成日语。
	这个没有特别好用。Anyway跳过它，这是我应该之前搜出来的，就是总结的意思。然后如果不对的话，大家也可以调整这个词，这个不重要，主要是用来展示这个分步骤。好，那我们现在来实际看一看它会怎么样去执行。一样的，在提示之前我们可以去看一看这个扣的是不是对的，里面会不会有多的message。好。
	我们提交。
	提交之后，它首先在执行第一步就是我们的总结，总结这部分内容。大语言模型是什么？有数十亿或者更多权用的人工神经网络组成的语言模型，然后能做什么样的一些工作，都在上面有写就结束了。大家发现没有，他没有执行第二步和第三步，然后我们再点submit，什么都不干，他居然在执行第二步，这个是一个很有意思的现象，这个网络问题重新提交。
	因为我们整个代码是没有做网络问题的处理，所以他会直接认为第二次的这个总结已经提交完成了，这里就直接去执行第三部分的内容了，这也是我们待会儿能看一下这个code里面，他认为这一步已经执行完了。但无所谓。大家自己去可以去复刻这个体验。所以从这个代码当中也能看到，明明是一个分步骤执行，但他居然在这儿分成了三个assistant的回复，这个是非常跟刚刚很不一样的一个体验，对吧？简单来说其实就是中文的这个描述提示词，就现阶段来说还是没有那么的好用。因为整个GPT的模型还是以英文为主，所以你去用中文去表达类似的这种分步执行，这样的体验会有的时候会出现一些不太好的体验，那有没有一些办法来解决呢？
	也有，就比如说在这里我们先点一下C有这样的一个我自己试出来的黑说法，就去去处理这个事情。就是你在这儿加上一个单次回复就全部执行完，就是指一次回复就执行完所有的内容我们来试一试，保存一下。你看一下这个被加上了，点提交。总结，他继续在深层总结。我们看看他会不会去执行第二个步骤，不会，看来这个黑魔法现在也失效了，这是一个需要大家去不断去试的一个过程。可以再试试加到末尾。删掉。这很有意思，就我在几周前的那个版本上去使用这个单次回复全部执行完，它也是仍然有效的，甚至在我们的课件的截图里还能看到，现在它也失效了。
	在这里还有一个原因，有可能是这个nars的原因造成的事实。
	他应该是他的配光让自己出了一些bug。
	好，通过这个方式是可以的，很有意思。好，这个就把三个步骤给完整的执行完了。好，我们能看到其实整个在使用我们的ChatGPT的时候，有各种各样的技巧。这些技巧都能指引着我们去把提示词这件事情的功力练得越来越深厚。
	像我们这里看到的各种事例，包括我们的构造标注数据，这里没有做展示。我再给大家展示一下，这个构造标注数据就是用来做什么呢？我们希望把用户输入的，就比如说我们现在输入这个防火规范，或者说一个产品介绍，这个介绍是平平无奇的一个介绍陈述性的语句。我们希望把这个陈述性的语句造成可以用来训练的数据集。形式就是这样的一个形式。这个形式是符合文心千帆般的训练数据的一个形式，前面是prompt，后面是response。如果你是用的ChatGLM可能又不一样，那这个不同的训练形式都可以让我们的GPT来生成。并且你把这个参考形式给他，就相当于一个full shot的一个指令。
	有两个参考实例，给他的是对应的输入的原文，然后让他来做这个生成。我们能看到它其实把我们的输入原文变成了一个的问题，比如说我们这上面写的建筑的这个总平面符合减少火灾危害，方便救援的要求，那它会生成一个什么呢？它会生成一个问题，建筑的总平面布局应该符合哪些要求？总平面应该符合减少就他的回答变成了正文当中的一部分，问题是由GPT4根据这个正文来构造的问题，那这个就能进一步用于我们去做训练了，包括这儿消防车道或兼作消防车道的道路有哪些要求才和的一些内容可以通过这样的方式来构造我们的训练数据，这个超过了长度的要求。
	是的，那这得把我们的第一段给删掉，展示一下。保存。这个player它会有一些延迟，就你在这个地方save之后，你要等它等个10秒左右的时间，它才能把这个部分的真正的这个地方删掉，去重新发请求。
	我们把这稍微删减一部分，节约时间。
	接下来。
	这很神奇，我们换一个长长文本的版本。长GP3.5不好用了。还得用GP4，3.5，在生成这种训练集的场景里面有时候会失效，这个也是我试下来确实会有的问题。还剩星期四，然后用这个system我们来试一试。这还超过，再删几条吧。
	9041。这个应该是他自己的统计有些问题。我们上节课教过怎么样去用这token来算这个数据，大家可以去试一试，这个应该是没超的，可能就他自己的这个playground的刷新还是有些问题。
	好啊，应该是这个地方，这个地方是只表达了生成部分的。这里我更正一下，这个部分的长度是只占生成部分的这个长度。然后如果这个地方拉的太满的话，确实会影响刚刚说的这个超出了这个上限。简单要求这儿如果调的太大，本身这里太长，就我们输入的太长的话，确实会超过它的上限。但这儿调小一点，就会控制总的这个数量。所以反过来说明刚刚那个分步骤执行那个中文不是这个问题，还是那个黑魔法确实失效了。
	在这里我们再回过头来看一眼。我们刚刚在试这个的时候，把这儿做了一个调整，那个其实帮助不大，还是得移到下面来，这个大家可以再去试验一下。好好，我们的最佳实践的部分就到这儿，然后这些示例我们都放到了课程的PPT课件里面，在这里大家都可以去实际的去试一试，体验一下。包括刚刚那个中文版本，这个模型评估的输出，这个是它的英文版本，英文版本它的是效果会更稳定，包括我们去生成这个训练的标注数据等等。好，那么我们这节课就到这儿，下节课我们开始学习function calling。